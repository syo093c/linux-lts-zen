name: Build Linux LTS Zen for Arch Linux

on:
  push:
    branches:
      - main  # 或者你希望触发CI的分支
  schedule:
    - cron: '0 0 * * *'  # 每天定时运行一次，可以根据需要调整时间

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get latest LTS kernel version
      id: get_kernel_version
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
        LATEST_LTS=$(curl -s https://www.kernel.org/releases.json | jq -r '.releases[] | select(.moniker == "longterm") | .version' | sort -V | tail -n 1)
        echo "LATEST_LTS=${LATEST_LTS}" >> $GITHUB_ENV

    - name: Build in Docker
      run: |
        docker run --rm -v $PWD:/workspace -w /workspace archlinux:latest /bin/bash -c "
          pacman -Syu --noconfirm && \
          pacman -S --noconfirm base-devel git wget cpio bc libelf pahole perl python tar xz graphviz imagemagick python-sphinx texlive-latexextra && \
          useradd -m builder && \
          echo 'builder ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/builder && \
          su builder -c 'cd /workspace && makepkg -s'
        "

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux-lts-zen
        path: "*.pkg.tar.zst"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.LATEST_LTS }}-zen
        release_name: Linux LTS Zen ${{ env.LATEST_LTS }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "*.pkg.tar.zst"
        asset_name: linux-lts-zen-${{ env.LATEST_LTS }}.pkg.tar.zst
        asset_content_type: application/zst
