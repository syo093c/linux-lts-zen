name: Build Linux LTS Zen for Arch Linux

on:
  push:
    branches:
      - main  # 或者你希望触发CI的分支
  schedule:
    - cron: '0 0 * * *'  # 每天定时运行一次，可以根据需要调整时间

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq

    - name: Get latest LTS kernel version
      id: get_kernel_version
      run: |
        LATEST_LTS=$(curl -s https://www.kernel.org/releases.json | jq -r '.releases[] | select(.moniker == "longterm") | .version' | sort -V | tail -n 1)
        echo "LATEST_LTS=${LATEST_LTS}" >> $GITHUB_ENV

    - name: Set up Arch Linux environment
      run: |
        sudo apt-get install -y arch-install-scripts
        sudo mkdir -p /mnt/arch
        sudo pacstrap /mnt/arch base base-devel git wget
        sudo cp /etc/resolv.conf /mnt/arch/etc/
        sudo mount -t proc /proc /mnt/arch/proc
        sudo mount --rbind /sys /mnt/arch/sys
        sudo mount --rbind /dev /mnt/arch/dev
        sudo chroot /mnt/arch /bin/bash -c "useradd -m builder && echo 'builder ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/builder"

    - name: Set up build environment
      run: |
        sudo chroot /mnt/arch /bin/bash -c "pacman -Syu --noconfirm"
        sudo chroot /mnt/arch /bin/bash -c "sudo -u builder git clone https://aur.archlinux.org/yay.git /home/builder/yay"
        sudo chroot /mnt/arch /bin/bash -c "cd /home/builder/yay && sudo -u builder makepkg -si --noconfirm"
        sudo chroot /mnt/arch /bin/bash -c "sudo -u builder yay -S --noconfirm cpio bc libelf pahole perl python tar xz graphviz imagemagick python-sphinx texlive-latexextra"

    - name: Copy PKGBUILD and patches
      run: |
        sudo mkdir -p /mnt/arch/build
        sudo cp -r . /mnt/arch/build
        sudo chroot /mnt/arch /bin/bash -c "chown -R builder:builder /build"
        sudo chroot /mnt/arch /bin/bash -c "sed -i 's/pkgver=.*/pkgver=${{ env.LATEST_LTS }}/' /build/PKGBUILD"

    - name: Build package
      run: |
        sudo chroot /mnt/arch /bin/bash -c "cd /build && sudo -u builder makepkg -s"

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux-lts-zen
        path: /mnt/arch/build/*.pkg.tar.zst

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.LATEST_LTS }}-zen
        release_name: Linux LTS Zen ${{ env.LATEST_LTS }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: /mnt/arch/build/*.pkg.tar.zst
        asset_name: linux-lts-zen-${{ env.LATEST_LTS }}.pkg.tar.zst
        asset_content_type: application/zst

